{"ast":null,"code":"var _jsxFileName = \"D:\\\\aimasho\\\\aimasho\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = _ref => {\n  _s();\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n      setClickedUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, []);\n  const messages = [];\n  usersMessages === null || usersMessages === void 0 ? void 0 : usersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage['name'] = user === null || user === void 0 ? void 0 : user.first_name;\n    formattedMessage['img'] = user === null || user === void 0 ? void 0 : user.url;\n    formattedMessage['message'] = message.message;\n    formattedMessage['timestamp'] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  clickedUsersMessages === null || clickedUsersMessages === void 0 ? void 0 : clickedUsersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage['name'] = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name;\n    formattedMessage['img'] = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url;\n    formattedMessage['message'] = message.message;\n    formattedMessage['timestamp'] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  const descendingOrderMessages = messages === null || messages === void 0 ? void 0 : messages.sort((a, b) => a.timestamp.localeCompare(b.timestamp));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      descendingOrderMessages: descendingOrderMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      user: user,\n      clickedUser: clickedUser,\n      getUserMessages: getUsersMessages,\n      getClickedUsersMessages: getClickedUsersMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"2NEB42wPVsAhSx/Wnejt8YtyMTY=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["Chat","ChatInput","axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","_ref","_s","user","clickedUser","userId","user_id","clickedUserId","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","getUsersMessages","response","get","params","correspondingUserId","data","error","console","log","getClickedUsersMessages","messages","forEach","message","formattedMessage","first_name","url","timestamp","push","descendingOrderMessages","sort","a","b","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","getUserMessages","_c","$RefreshReg$"],"sources":["D:/aimasho/aimasho/client/src/components/ChatDisplay.js"],"sourcesContent":["import Chat from './Chat'\nimport ChatInput from './ChatInput'\nimport axios from 'axios'\nimport {useState, useEffect} from \"react\"\n\n\nconst ChatDisplay = ({ user , clickedUser }) => {\n    const userId = user?.user_id\n    const clickedUserId = clickedUser?.user_id\n    const [usersMessages, setUsersMessages] = useState(null)\n    const [clickedUsersMessages, setClickedUsersMessages] = useState(null)\n\n    const getUsersMessages = async () => {\n     try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: { userId: userId, correspondingUserId: clickedUserId}\n            })\n         setUsersMessages(response.data)\n        } catch (error) {\n         console.log(error)\n     }\n    }\n\n    const getClickedUsersMessages = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: { userId: clickedUserId , correspondingUserId: userId}\n            })\n            setClickedUsersMessages(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getUsersMessages()\n        getClickedUsersMessages()\n    }, [])\n\n    const messages = []\n\n    usersMessages?.forEach(message => {\n        const formattedMessage = {}\n        formattedMessage['name'] = user?.first_name\n        formattedMessage['img'] = user?.url\n        formattedMessage['message'] = message.message\n        formattedMessage['timestamp'] = message.timestamp\n        messages.push(formattedMessage)\n    })\n\n    clickedUsersMessages?.forEach(message => {\n        const formattedMessage = {}\n        formattedMessage['name'] = clickedUser?.first_name\n        formattedMessage['img'] = clickedUser?.url\n        formattedMessage['message'] = message.message\n        formattedMessage['timestamp'] = message.timestamp\n        messages.push(formattedMessage)\n    })\n\n    const descendingOrderMessages = messages?.sort((a,b) => a.timestamp.localeCompare(b.timestamp))\n\n    return (\n        <>\n        <Chat descendingOrderMessages={descendingOrderMessages}/>\n     <ChatInput\n         user={user}\n         clickedUser={clickedUser} getUserMessages={getUsersMessages} getClickedUsersMessages={getClickedUsersMessages}/>\n        </>\n    )\n}\n\nexport default ChatDisplay"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzC,MAAMC,WAAW,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,IAAI;IAAGC;EAAY,CAAC,GAAAH,IAAA;EACvC,MAAMI,MAAM,GAAGF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,OAAO;EAC5B,MAAMC,aAAa,GAAGH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,OAAO;EAC1C,MAAM,CAACE,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtE,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACG,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,gCAAgC,EAAE;QAC/DC,MAAM,EAAE;UAAEV,MAAM,EAAEA,MAAM;UAAEW,mBAAmB,EAAET;QAAa;MAChE,CAAC,CAAC;MACLE,gBAAgB,CAACI,QAAQ,CAACI,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACD,CAAC;EAED,MAAMG,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,gCAAgC,EAAE;QAC/DC,MAAM,EAAE;UAAEV,MAAM,EAAEE,aAAa;UAAGS,mBAAmB,EAAEX;QAAM;MACjE,CAAC,CAAC;MACFM,uBAAuB,CAACE,QAAQ,CAACI,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZiB,gBAAgB,EAAE;IAClBS,uBAAuB,EAAE;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAG,EAAE;EAEnBd,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEe,OAAO,CAACC,OAAO,IAAI;IAC9B,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAC3BA,gBAAgB,CAAC,MAAM,CAAC,GAAGtB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuB,UAAU;IAC3CD,gBAAgB,CAAC,KAAK,CAAC,GAAGtB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEwB,GAAG;IACnCF,gBAAgB,CAAC,SAAS,CAAC,GAAGD,OAAO,CAACA,OAAO;IAC7CC,gBAAgB,CAAC,WAAW,CAAC,GAAGD,OAAO,CAACI,SAAS;IACjDN,QAAQ,CAACO,IAAI,CAACJ,gBAAgB,CAAC;EACnC,CAAC,CAAC;EAEFf,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEa,OAAO,CAACC,OAAO,IAAI;IACrC,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAC3BA,gBAAgB,CAAC,MAAM,CAAC,GAAGrB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEsB,UAAU;IAClDD,gBAAgB,CAAC,KAAK,CAAC,GAAGrB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEuB,GAAG;IAC1CF,gBAAgB,CAAC,SAAS,CAAC,GAAGD,OAAO,CAACA,OAAO;IAC7CC,gBAAgB,CAAC,WAAW,CAAC,GAAGD,OAAO,CAACI,SAAS;IACjDN,QAAQ,CAACO,IAAI,CAACJ,gBAAgB,CAAC;EACnC,CAAC,CAAC;EAEF,MAAMK,uBAAuB,GAAGR,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACJ,SAAS,CAACM,aAAa,CAACD,CAAC,CAACL,SAAS,CAAC,CAAC;EAE/F,oBACI/B,OAAA,CAAAE,SAAA;IAAAoC,QAAA,gBACAtC,OAAA,CAACN,IAAI;MAACuC,uBAAuB,EAAEA;IAAwB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5D1C,OAAA,CAACL,SAAS;MACNW,IAAI,EAAEA,IAAK;MACXC,WAAW,EAAEA,WAAY;MAACoC,eAAe,EAAE5B,gBAAiB;MAACS,uBAAuB,EAAEA;IAAwB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBAC9G;AAEX,CAAC;AAAArC,EAAA,CA/DKF,WAAW;AAAAyC,EAAA,GAAXzC,WAAW;AAiEjB,eAAeA,WAAW;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}